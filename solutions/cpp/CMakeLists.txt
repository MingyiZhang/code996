cmake_minimum_required(VERSION 3.15)
project(solutions)

set(CMAKE_CXX_STANDARD 17)

file(GLOB HEADER_LIST CONFIGURE_DEPENDS "include/*.hpp")

option(PACKAGE_TESTS "Build the tests" ON)
if (PACKAGE_TESTS)
  enable_testing()
  include(GoogleTest)
  add_subdirectory("extern/googletest")
endif ()

macro(ADD_EXE NAME)
  add_executable(${NAME}.out ${NAME}/solution.cpp)
endmacro()

macro(ADD_TEST NAME)
  add_executable(${NAME}_test ${NAME}/solution_test.cpp ${HEADER_LIST})
  target_link_libraries(${NAME}_test gtest gmock gtest_main)
endmacro()

macro(ADD_EXE_TEST NAME)
  add_exe(${NAME})
  add_test(${NAME})
endmacro()

add_exe(twoSumII)
add_exe(sumOfSquareNumbers)
add_exe(reverseVowels)
add_exe(validPalindromeII)
add_exe(mergeSortedArray)
add_exe(linkedListCycle)
add_exe(findLongestWord)
add_exe(kthLargestElement)
add_exe(topKFrequentElements)
add_exe(sortCharactersByFrequency)
add_exe(sortColors)
add_exe(assignCookies)
add_exe(nonOverlappingInterval)
add_exe(findMinArrowShots)
add_exe(queueReconstructionByHeight)
add_exe(bestTimeToBuyAndSellStock)
add_exe(bestTimeToBuyAndSellStockII)
add_exe(canPlaceFlowers)
add_exe(isSubsequence)
add_exe(nonDecreasingArray)
add_exe(maximumSubarray)
add_exe(partitionLabels)
add_exe(sqrtx)
add_exe(findSmallestLetterGreaterThanTarget)
add_exe(singleElementInASortedArray)
add_exe(firstBadVersion)
add_exe(findMinimumRotatedSortedArray)
add_exe(findFirstLastElement)
add_exe(diffWaysToAddParentheses)
add_exe(uniqueBinarySearchTreeII)
add_exe(shortestPathInBinaryMatrix)
add_exe(perfectSquares)
add_exe_test(maxAreaIsland)
add_exe_test(friendCircles)
add_exe_test(surroundedRegions)
add_exe_test(restoreIpAddress)
add_exe_test(permutations)
add_exe_test(combinationSum)
add_exe_test(climbingStairs)
add_exe_test(minimumPathSum)
add_exe_test(integerBreak)